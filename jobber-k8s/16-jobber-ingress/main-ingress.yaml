apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: jobber-ingress
  namespace: production
  annotations:
    # ALB Name
    alb.ingress.kubernetes.io/load-balancer-name: jobber-alb
    alb.ingress.kubernetes.io/scheme: internet-facing
    # Health Checks 
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80}, {"HTTPS":443}]'
    alb.ingress.kubernetes.io/healthcheck-protocol: HTTP 
    alb.ingress.kubernetes.io/healthcheck-port: traffic-port
    alb.ingress.kubernetes.io/healthcheck-interval-seconds: '15'
    alb.ingress.kubernetes.io/healthcheck-timeout-seconds: '5'
    alb.ingress.kubernetes.io/success-codes: '200'
    alb.ingress.kubernetes.io/healthy-threshold-count: '2'
    alb.ingress.kubernetes.io/unhealthy-threshold-count: '2'
     ## SSL Settings
    alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:307436399520:certificate/75d78c24-2473-40d2-bc52-ea2445ab04ad
    alb.ingress.kubernetes.io/ssl-redirect: '443'
    alb.ingress.kubernetes.io/target-type: ip
    # Ingress Groups
    alb.ingress.kubernetes.io/group.name: myapps.web
    alb.ingress.kubernetes.io/group.order: '40'
    # ExternalDNS to manage Route 53 records
    external-dns.alpha.kubernetes.io/hostname: |
      jasmeet-devops.shop
      api.jasmeet-devops.shop

spec:
  ingressClassName: alb
  rules:

    - host: api.jasmeet-devops.shop
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jobber-gateway
                port:
                  number: 4000    

    - host: jasmeet-devops.shop
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: jobber-frontend
                port:
                  number: 80                                     

    